<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	
	
    <modelVersion>4.0.0</modelVersion>

    <!--
     | # Project Identifiers
     ` -->
    <groupId>com.skbroadband</groupId>
    <artifactId>broadband-isc</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <!-- More Project Information -->
    <name>Information Security Center</name>
    <url>http://isc.skbroadband.com</url>

    <!--
     | # Build Configuration
     ` -->
    <properties>
        <targetJdk>1.8</targetJdk>
        <default.encoding>UTF-8</default.encoding>
        <project.build.sourceEncoding>${default.encoding}</project.build.sourceEncoding>
        <project.reporting.outputEncoding>${default.encoding}</project.reporting.outputEncoding>
        <springframework.version>4.2.5.RELEASE</springframework.version>
        <springframework.security.version>4.0.4.RELEASE</springframework.security.version>
        <maven.test.skip>true</maven.test.skip>
    </properties>
    
    <!--
     | # Dependency Management
     |  의존성 모듈이 하위 버전을 찾는다면 이곳에 설정해 두면 원하는 버전으로 다운받는다.
     |  따라서 의존성모듈에서 <exclusions/>에 제외 해야 할 모듈을 명시할 필요가 없어진다.
     ` -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aop</artifactId>
                <version>${springframework.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webmvc</artifactId>
                <version>${springframework.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-orm</artifactId>
                <version>${springframework.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context-support</artifactId>
                <version>${springframework.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-oxm</artifactId>
                <version>${springframework.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${springframework.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-web</artifactId>
                <version>${springframework.security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-config</artifactId>
                <version>${springframework.security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-taglibs</artifactId>
                <version>${springframework.security.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!--
     | # Dependencies
     ` -->
    <dependencies>

        <!-- Test -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>1.10.19</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
            <version>1.3</version>
            <scope>test</scope>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>1.7.19</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.7.19</version>
        </dependency>

        <!-- AspectJ -->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>1.8.9</version>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>1.8.9</version>
        </dependency>

        <!--
         | # Spring Framework
         |  * 2014.11.20 MarshallingView 사용을 위해 spring-oxm을 추가하였다.
         |  * 2014.09.20 3.2버전에서 스프링이 JCache를 지원하면서 EHCache지원 클래스가 contexts-context에서 contexts-contexts-support로 이동되었다.
         |    패키지경로의 변경은 없고 단지 EHCache를 포함한 모듈만 변경되었다.
         |    따라서 EHCache를 사용하기 위해서 contexts-contexts-support를 추가하였다.
         ` -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-oxm</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!--
         | # Spring Security Framework
         ` -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-taglibs</artifactId>
        </dependency>

        <!--
         | # JSR 303: with Hibernate Validator
         |  * 5.x.x 버전은 springframework(3.2.x)에서 지원하지 않는다. ResourceBundleLocator가 없다.
         |  * 아쉽지만 4.3.x를 사용하자. springframework 4.x.x에서 사용해야 할 듯 하다.
         ` -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>4.3.2.Final</version>
        </dependency>

        <!--
         | # for JPA and Hibernate
         ` -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>4.2.6.Final</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-ehcache</artifactId>
            <version>4.2.6.Final</version>
        </dependency>

        <!-- mybatis for spring -->
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis-spring</artifactId>
            <version>1.2.2</version>
        </dependency>
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
            <version>3.2.3</version>
        </dependency>

        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis-ehcache</artifactId>
            <version>1.0.0</version>
        </dependency>        
        <!--
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
            <version>3.2.3</version>
        </dependency>

        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis-ehcache</artifactId>
            <version>1.0.0</version>
        </dependency>
        -->

<!--        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.38</version>
            <scope>provided</scope>
        </dependency>-->

<!--
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.38</version>
            <scope>provided</scope>
         </dependency>
-->

        <!-- MSSQL -->

		<!-- 2017.08.04 신정철 변경 -->
<!--         <dependency>
            <groupId>com.microsoft.sqlserver.jdbc42</groupId>
            <artifactId>sqljdbc</artifactId>
            <version>4.2</version>
        </dependency>
 -->
		<!-- https://mvnrepository.com/artifact/com.microsoft.sqlserver/mssql-jdbc -->
		<dependency>
		    <groupId>com.microsoft.sqlserver</groupId>
		    <artifactId>mssql-jdbc</artifactId>
		    <version>6.1.0.jre8</version>
		    <scope>runtime</scope>
		</dependency>

        <!--
        <dependency>
            <groupId>com.oracle</groupId>
            <artifactId>ojdbc6</artifactId>
            <version>11.1.0.7.0</version>
            <scope>provided</scope>
        </dependency>
        -->

        <!--
         | # Cache
         ` -->
        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache</artifactId>
            <version>2.7.4</version>
        </dependency>
        <!--
        <dependency>
            <groupId>com.googlecode.ehcache-contexts-annotations</groupId>
            <artifactId>ehcache-contexts-annotations</artifactId>
            <version>1.2.0</version>
        </dependency>
        -->

        <!--
         | # Servlet and JSP API
         |  삽질주의!! WAS에서 지원하는 스펙을 꼭 확인하고 사용하자.
         ` -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.0.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>javax.servlet.jsp-api</artifactId>
            <version>2.2.1</version>
            <scope>provided</scope>
        </dependency>
        <!--
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>jsp-api</artifactId>
            <version>2.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
        </dependency>
        -->
        
        <dependency> 
	        <groupId>org.springframework</groupId> 
	        <artifactId>spring-core</artifactId> 
	        <version>${springframework.version}</version> 
	    </dependency> 

	    <dependency> 
	        <groupId>org.springframework</groupId> 
	        <artifactId>spring-tx</artifactId> 
	        <version>${springframework.version}</version> 
	    </dependency> 
	  
	    <dependency> 
	        <groupId>org.quartz-scheduler</groupId> 
	        <artifactId>quartz</artifactId> 
	        <version>2.2.1</version> 
	    </dependency> 
	            

        <!--
         | # JSTL
         |  javax.servlet.jsp.jstl로 그룹이 변경되어 관리되어 진다고 한다.
         |  하지만 새로운 그룹으로 배포되는 JSTL라이브러리에는 TLD를 포함하지 않아 페이지 호출시 에러가 발생한다.
         |  따라서 대안으로 아래 라이브러리를 사용하기로 한다.
         ` -->
        <dependency>
            <groupId>org.apache.taglibs</groupId>
            <artifactId>taglibs-standard-spec</artifactId>
            <version>1.2.5</version>
        </dependency>
        <dependency>
            <groupId>org.apache.taglibs</groupId>
            <artifactId>taglibs-standard-impl</artifactId>
            <version>1.2.5</version>
        </dependency>

        <!--
         | # Tiles3
         ` -->
        <dependency>
            <groupId>org.apache.tiles</groupId>
            <artifactId>tiles-jsp</artifactId>
            <version>3.0.5</version>
        </dependency>

        <!--
         | # Multipart 파일 업로드를 위한 모듈
         ` -->
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.3.1</version>
        </dependency>



        <!--
         | # 썸네일 생성을 위한 모듈
         ` -->
        <dependency>
            <groupId>org.imgscalr</groupId>
            <artifactId>imgscalr-lib</artifactId>
            <version>4.2</version>
        </dependency>

        <!--
         | # 메일 발송을 위한 모듈
         |  이메일 템플릿을 사용하기 위해 Velocity를 사용한다.
        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
            <version>1.4.7</version>
        </dependency>
        <dependency>
            <groupId>org.apache.velocity</groupId>
            <artifactId>velocity</artifactId>
            <version>1.7</version>
        </dependency>
         ` -->

        <!--
         | # MappingJackson2JsonView 지원을 위한 라이브러리
         | # 이 라이브러리가 클래스패스에 있다면 JSON Message Converter에 의해 자동으로 serialization과 deserialization이 될 것이다.
         |  17.15.1 Enabling the MVC Java Config or the MVC XML Namespace참고
         |  jackson-databind
         |      jackson-core
         |      jackson-annotations
         ` -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.7.3</version>
        </dependency>

        <!--
         | # Lombok - http://projectlombok.org
         |  Setter, Getter등 자동 생성 도구
         ` -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.16.8</version>
            <scope>provided</scope>
        </dependency>
        
        <!--
         | # jqgrid용
         |  그리드 플러그인
         ` -->        
		<dependency>
		    <groupId>net.sf.json-lib</groupId>
		    <artifactId>json-lib</artifactId>
		    <version>2.4</version>
		    <classifier>jdk13</classifier>    
		</dependency>

		<dependency>
		    <groupId>net.sf.json-lib</groupId>
		    <artifactId>json-lib</artifactId>
		    <version>2.4</version>
		    <classifier>jdk15</classifier>    
		</dependency>
		
		<dependency>
		    <groupId>org.json</groupId>
		    <artifactId>json</artifactId>
		    <version>20160810</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.apache.poi/poi -->
		<dependency>
		    <groupId>org.apache.poi</groupId>
		    <artifactId>poi</artifactId>
		    <version>3.15</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml -->
		<dependency>
		    <groupId>org.apache.poi</groupId>
		    <artifactId>poi-ooxml</artifactId>
		    <version>3.15</version>
		</dependency>			
    </dependencies>

    <build>

        <finalName>${project.artifactId}</finalName>

        <!--
         | 이곳에 정의한 플러그인은 해당 플러그인을 사용하기 전까지 로컬 저장소에 다운로드 되지 않는다.
         | <plugins/>에 정의하지 않은 플러그인도 최신버전을 사용하기 위해서는 이곳에서 선언해야 한다.
         | 최신버전의 Maven을 사용한다해도 최신 플러그인을 받아오지는 않는다.
         ` -->
        <pluginManagement>

            <plugins>

                <!--
                 | http://maven.apache.org/plugins/maven-clean-plugin/
                 | Goal : clean
                 ` -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>

                <!--
                 | http://maven.apache.org/plugins/maven-resources-plugin/
                 | Goal : resources
                 ` -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.7</version>
                </plugin>

                <!--
                 | http://maven.apache.org/plugins/maven-compiler-plugin/
                 | Goal : compile
                 ` -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.3</version>
                    <configuration>
                        <source>${targetJdk}</source>
                        <target>${targetJdk}</target>
                        <encoding>${default.encoding}</encoding>
                    </configuration>
                </plugin>

                <!--
                 | http://maven.apache.org/surefire/maven-surefire-plugin/
                 | Goal : test
                 ` -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.19</version>
                </plugin>

                <!--
                 | http://maven.apache.org/plugins/maven-war-plugin/
                 | Goal : package
                 ` -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>2.6</version>
                    <configuration>
                        <failOnMissingWebXml>false</failOnMissingWebXml>
                    </configuration>
                </plugin>

                <!--
                 | http://maven.apache.org/plugins/maven-install-plugin/
                 | Goal : install
                 ` -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.5.2</version>
                </plugin>

                <!--
                 | 아직 테스트 안해 봄...
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.7</version>
                    <executions>
                        <execution>
                            <id>default-deploy</id>
                            <phase>deploy</phase>
                            <goals>
                                <goal>deploy</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.0</version>
                    <executions>
                        <execution>
                            <id>default-site</id>
                            <phase>site</phase>
                            <goals>
                                <goal>site</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>/Users/andromediano/workbench/maven-depencency/target/site</outputDirectory>
                                <reportPlugins>
                                    <reportPlugin>
                                        <groupId>org.apache.maven.plugins</groupId>
                                        <artifactId>maven-project-info-reports-plugin</artifactId>
                                    </reportPlugin>
                                </reportPlugins>
                            </configuration>
                        </execution>
                        <execution>
                            <id>default-deploy</id>
                            <phase>site-deploy</phase>
                            <goals>
                                <goal>deploy</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>/Users/andromediano/workbench/maven-depencency/target/site</outputDirectory>
                                <reportPlugins>
                                    <reportPlugin>
                                        <groupId>org.apache.maven.plugins</groupId>
                                        <artifactId>maven-project-info-reports-plugin</artifactId>
                                    </reportPlugin>
                                </reportPlugins>
                            </configuration>
                        </execution>
                    </executions>
                    <configuration>
                        <outputDirectory>/Users/andromediano/workbench/maven-depencency/target/site</outputDirectory>
                        <reportPlugins>
                            <reportPlugin>
                                <groupId>org.apache.maven.plugins</groupId>
                                <artifactId>maven-project-info-reports-plugin</artifactId>
                            </reportPlugin>
                        </reportPlugins>
                    </configuration>
                </plugin>
                -->

                <!--
                 | http://maven.apache.org/plugins/maven-javadoc-plugin/
                 ` -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>2.10.3</version>
                </plugin>

                <!--
                 | http://maven.apache.org/plugins/maven-pmd-plugin/
                 ` -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>3.6</version>
                </plugin>

            </plugins>

        </pluginManagement>

        <!--
         | 이곳에 정의한 플러그인은 'Reimport'시에 로컬 저장소에 다운로드 된다.
         | http://maven.apache.org/plugins/index.html
         ` -->
        <plugins>

            <!--
             | http://maven.apache.org/plugins/maven-project-info-reports-plugin/
             ` -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>2.7</version>
				<configuration>
				  <failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>                
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <configuration>
                    <linkXRef>false</linkXRef>
                    <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
                    <minimumTokens>100</minimumTokens>
                    <targetJdk>${targetJdk}</targetJdk>
                </configuration>
            </plugin>


        </plugins>

    </build>
</project>
